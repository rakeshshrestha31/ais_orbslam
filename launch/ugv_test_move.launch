<!-- ugv_test_move.launch
     created by  Alireza Hekmati
     created at  AIS
     launch file for move_base using ugv_test_planner -->
<launch>
  <include file="$(find ugv_v2_test)/launch/ugv_test_bot.launch"/> 
  <!-- laser filter -->    
  <include file="$(find ugv_v2_test)/launch/ugv_test_tim571_laser_filter.launch"/>
  <include file="$(find ugv_v2_test)/launch/ugv_test_slam.launch"/>

  <node pkg="pot_detection" type="pot_detection" respawn="false" name="pot_detection" >
    <remap from="scan" to="base_scan" /> 
  </node>

  <!-- <node pkg="ugv_odom_subs" type="odom_listener" name="odom_listener" /> -->

  <!-- <node pkg="imu" type="talker" respawn="false" output="screen" name="talker" /> -->
  
  <node pkg="ugv_odom_pub" type="odom_publisher" name="odom_publisher" />

  <node pkg="tf" type="static_transform_publisher" name="fake_localize" args="0 0 0 0 0 0 base_link imu_link 10"/> 

  <node pkg="ag_communicator_v3" type="ag_communicator_v3" respawn="false" name="ag_communicator_v3" /> 

  <node pkg="ais_ugv2_manual" type="manualMode" respawn="false" name="manualMode" /> 

  <node pkg="ais_ugv2_temp" type="au_temp" respawn="false" name="au_temp" />

  <include file="$(find ugv_v2_test)/launch/ugv_test_lidar.launch"/> 

  <node pkg="ais_ugv2_xsens" type="ais_ugv2_xsens" respawn="false" name="imu_node" />

  <!-- <node pkg="ais_pickup_dropoff" type="main_controller" name="main_controller" output="screen" /> -->
  <!-- Visual odometry -->
  <include file="$(find realsense_camera)/launch/r200_nodelet_rgbd.launch" />
  <include file="$(find VO_ORB)/launch/r200.launch" />
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf" output="screen">
  	<param name="output_frame" value="odom"/>
  	<param name="base_footprint_frame" value="base_link"/>
  	<param name="freq" value="20.0"/>
  	<param name="sensor_timeout" value="1.0"/>  
  	<param name="odom_used" value="true"/>
  	<param name="imu_used" value="true"/>
  	<param name="vo_used" value="true"/>

   <remap from="/odom" to="/wheelodom" />
   <remap from="/vo" to="/ORB2_RGBD/visual_odom" />
  </node>

  <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen" >
        <param name="controller_frequency" value="5.0"/>
        <param name="planner_frequency" value="10.0" />
        <param name="base_local_planner" value="dwa_mobs_planner/DWAMobsPlannerROS" /> 
        <!-- <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" /> -->
        <rosparam file="$(find ugv_v2_test)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find ugv_v2_test)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find ugv_v2_test)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find ugv_v2_test)/config/navfn_params.yaml" command="load" />   
        <rosparam file="$(find ugv_v2_test)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find ugv_v2_test)/config/ugv_test_original_planner_params.yaml" command="load" />
   <!-- <remap from="/cmd_vel" to="/p2os/cmd_vel" /> -->

    </node>


  <!-- <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
    name="laser_scan_matcher_node" output="screen">
    <param name="fixed_frame" value = "odom"/>
    <param name="base_frame" value = "base_link"/>
    <param name="use_imu" value = "false"/>
    <param name="use_odom" value = "true"/>
    <param name="use_vel" value = "false"/>
    <param name="kf_dist_linear" value="0.10"/>
    <param name="kf_dist_angular" value="0.175"/>
    <param name="use_alpha_beta" value="true"/> 
    <param name="max_iterations" value="10"/>
  </node> --> 

  <!-- Publish scans from best pose at a max of 10 Hz -->
  <!-- <node pkg="amcl" type="amcl" name="amcl" output="screen" >
  <param name="odom_model_type" value="diff-corrected"/>
 
  <param name="transform_tolerance" value="0.2" />
  <param name="gui_publish_rate" value="10.0"/>
  <param name="laser_max_beams" value="30"/>
  <param name="min_particles" value="500"/>
  <param name="max_particles" value="5000"/>
  <param name="kld_err" value="0.05"/>
  <param name="kld_z" value="0.99"/>
  <param name="odom_alpha1" value="0.2"/>
  <param name="odom_alpha2" value="0.2"/>
  
  <param name="odom_alpha3" value="0.2"/>
  <param name="odom_alpha4" value="0.2"/>
  <param name="laser_z_hit" value="0.5"/>
  <param name="laser_z_short" value="0.05"/>
  <param name="laser_z_max" value="0.05"/>
  <param name="laser_z_rand" value="0.5"/>
  <param name="laser_sigma_hit" value="0.2"/>
  <param name="laser_lambda_short" value="0.1"/>
  <param name="laser_lambda_short" value="0.1"/>
  <param name="laser_model_type" value="likelihood_field"/>
 
  <param name="laser_likelihood_max_dist" value="2.0"/>
  <param name="update_min_d" value="0.2"/>
  <param name="update_min_a" value="0.5"/>
  <param name="odom_frame_id" value="odom"/>

  <param name="base_frame_id" type="str" value="base_link" />
  <param name="global_frame_id" type="str" value="map" />

  <param name="resample_interval" value="1"/>
  <param name="transform_tolerance" value="0.1"/>
  <param name="recovery_alpha_slow" value="0.0"/>
  <param name="recovery_alpha_fast" value="0.0"/>
  <param name="use_map_topic" value="true" />
  <param name="first_map_only" value="true" /> -->
  <!-- translation std dev, m -->
   <!-- <param name="laser_model_type" value="beam"/> -->
   <!-- <param name="odom_alpha5" value="0.1"/> 
</node> -->
 <node pkg="VO_ORB" type="simple_navigation_goals" name = "goals" output="screen"/>
</launch>
